## PyQt5 PushButton Sample 1

from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QListWidgetItem
import sys
import os
import tkinter as tk
from tkinter import filedialog

os.getcwd()  # 현재의 파일경로 획득


class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        # Main Window Size
        MainWindow.setGeometry(300, 300, 500, 300)
        self.centralwidget = QtWidgets.QWidget(MainWindow)

        # adding pushbutton
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(10, 10, 120, 40))

        # adding signal and slot
        self.pushButton.clicked.connect(self.OpenNListFiles)

        # adding ListWidget
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(10, 100, 460, 100))

        # Label 초기 상태 설정
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 50, 460, 40))
        self.label.setText("'파일 불러오기'를 눌러 파일을 선택해주세요 \n")

        MainWindow.setCentralWidget(self.centralwidget)
        self.ReTranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # UI내 Label Parameter 삽입

    def ReTranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Smart File 분석 프로그램"))
        self.pushButton.setText(_translate("MainWindow", "파일 불러오기"))

        # Pushbutton 누를 시 작동 로직

    def OpenNListFiles(self):
        root = tk.Tk()
        root.withdraw()
        # file_path = filedialog.askopenfilename()  # 파일선택 GUI열기 (Windows기본창)

        file_path = filedialog.askopenfilename(multiple=True)  # 파일선택 GUI열기 (Windows기본창) - Multiple기능 추가
        tn = len(file_path)  # 파일 갯수 카운팅

        for i in range(tn):
            head, tail1 = os.path.split(file_path[i])  # 파일위치(path)와 파일명(tail) 구분시키기
            if i == 0:
                tail = [tail1, ]  # String을 리스트형으로 만들어 삽입해야 여러개 데이터를 넣을 수 있음
            else:
                tail.append(tail1)  # 리스트형데이터에 추가로 String데이터 넣기

        if len(file_path) == 0:
            tail = ""  # 선택이 취소 되었을 경우 파일리스트 Clear
            self.listWidget.clear()  # List항목 삭제
            QListWidgetItem(tail, self.listWidget)  # List항목 입력
            self.label.setText("파일이 선택되지 않았습니다. \n"
                               "다시 '파일 불러오기'를 눌러 파일을 선택해주세요")
        else:
            self.listWidget.clear()  # List항목 삭제
            for j in range(tn):  # QListWidgetItem기능에서는 String만 삽입가능하므로 리스트형 데이터를 하나씩 String으로 쪼개어 넣어줌 
                filename = tail[j]
                QListWidgetItem(filename, self.listWidget)
            self.label.setText("파일이 선택되었습니다 \n")
        # self.pushButton.hide() # push button 숨기고 싶을 때 사용


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)

    MainWindow = QtWidgets.QMainWindow()

    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()

    sys.exit(app.exec_())
